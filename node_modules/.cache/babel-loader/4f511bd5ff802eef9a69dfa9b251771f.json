{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthkeshar/Documents/GitHub/Spotify_clo/src/components/Footer.js\";\nimport React, { useEffect } from 'react';\nimport \"./styles/Footer.css\";\n/*import PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\"\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\"\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\"\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\"\nimport RepeatIcon from \"@material-ui/icons/Repeat\"\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\"\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\"\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\"\nimport { Grid, Slider } from \"@material-ui/core\"*/\nimport { useDataLayerValue } from '../DataLayer';\nimport SpotifyPlayer from 'react-spotify-web-playback';\n//npm i react-spotify-web-playback\n//https://github.com/gilbarbara/react-spotify-web-playback\n\nexport const Footer = ({\n  spotify\n}) => {\n  const [{\n    play_uri,\n    token,\n    playing\n  }, dispatch] = useDataLayerValue();\n  let track = null;\n  useEffect(() => {\n    spotify.getMyCurrentPlaybackState().then(r => {\n      console.log(r);\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: r.is_playing\n      });\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item\n      });\n    });\n  }, [spotify, dispatch]);\n  const handleChange = () => {\n    dispatch({\n      type: \"SET_ITEM\",\n      item: track\n    });\n    if (!track.isPlaying) {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: track.isPlaying\n      });\n    }\n  };\n\n  /*const skipNext = () => {\n     spotify.skipToNext()\n     spotify.getMyCurrentPlayingTrack().then((r) => {\n       dispatch({\n         type: \"SET_ITEM\",\n         item: r.item,\n       })\n       dispatch({\n         type: \"SET_PLAYING\",\n         playing: true,\n       })\n     })\n   }\n    const skipPrevious = () => {\n     spotify.skipToPrevious()\n     spotify.getMyCurrentPlayingTrack().then((r) => {\n       dispatch({\n         type: \"SET_ITEM\",\n         item: r.item,\n       })\n       dispatch({\n         type: \"SET_PLAYING\",\n         playing: true,\n       })\n     })\n   }*/\n\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer_player_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpotifyPlayer, {\n    name: \"Spotify-clone\",\n    token: token,\n    uris: [play_uri],\n    styles: {\n      bgColor: ' #282828',\n      color: '#fff',\n      loaderColor: '#1DB954',\n      sliderColor: '#1DB954',\n      savedColor: '#fff',\n      trackArtistColor: '#ccc',\n      trackNameColor: '#fff',\n      loaderSize: 1.5,\n      sliderHandleColor: \"#fff\"\n    },\n    play: playing,\n    callback: state => {\n      track = state;\n      if (track.isPlaying) {\n        handleChange();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"names":["React","useEffect","useDataLayerValue","SpotifyPlayer","Footer","spotify","play_uri","token","playing","dispatch","track","getMyCurrentPlaybackState","then","r","console","log","type","is_playing","item","handleChange","isPlaying","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","name","uris","styles","bgColor","color","loaderColor","sliderColor","savedColor","trackArtistColor","trackNameColor","loaderSize","sliderHandleColor","play","callback","state"],"sources":["/Users/siddharthkeshar/Documents/GitHub/Spotify_clo/src/components/Footer.js"],"sourcesContent":["import React,{useEffect} from 'react'\nimport \"./styles/Footer.css\"\n/*import PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\"\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\"\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\"\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\"\nimport RepeatIcon from \"@material-ui/icons/Repeat\"\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\"\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\"\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\"\nimport { Grid, Slider } from \"@material-ui/core\"*/\nimport { useDataLayerValue } from '../DataLayer'\nimport SpotifyPlayer from 'react-spotify-web-playback'\n//npm i react-spotify-web-playback\n//https://github.com/gilbarbara/react-spotify-web-playback\n\nexport const Footer =({spotify})=>{\n    const [{play_uri, token, playing }, dispatch] = useDataLayerValue()\n\n    let track=null\n    useEffect(() => {\n        spotify.getMyCurrentPlaybackState().then((r) => {\n          console.log(r)\n    \n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: r.is_playing,\n          })\n    \n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          })\n        })\n      }, [spotify,dispatch])\n\n     const handleChange = () => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: track,\n        })\n        if(!track.isPlaying){\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: track.isPlaying\n          })\n        }\n      }\n\n     /*const skipNext = () => {\n        spotify.skipToNext()\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          })\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          })\n        })\n      }\n\n      const skipPrevious = () => {\n        spotify.skipToPrevious()\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          })\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          })\n        })\n      }*/\n      \n    return(\n        <footer >\n            <div className=\"footer_player_container\">\n            <SpotifyPlayer \n                name='Spotify-clone'\n                token={token}\n                uris={[play_uri]}\n                styles={{\n                    bgColor: ' #282828',\n                    color: '#fff',\n                    loaderColor: '#1DB954',\n                    sliderColor: '#1DB954',\n                    savedColor: '#fff',\n                    trackArtistColor: '#ccc',\n                    trackNameColor: '#fff',\n                    loaderSize:1.5,\n                    sliderHandleColor: \"#fff\"\n                  }}\n                play={playing}\n                callback={(state)=>{\n                    track=state\n                    if (track.isPlaying){\n                      handleChange()\n                    }\n                }}\n                />\n            </div>\n        </footer>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiB,QAAQ,cAAc;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAEA,CAAC;EAACC;AAAO,CAAC,KAAG;EAC9B,MAAM,CAAC;IAACC,QAAQ;IAAEC,KAAK;IAAEC;EAAQ,CAAC,EAAEC,QAAQ,CAAC,GAAGP,iBAAiB,CAAC,CAAC;EAEnE,IAAIQ,KAAK,GAAC,IAAI;EACdT,SAAS,CAAC,MAAM;IACZI,OAAO,CAACM,yBAAyB,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAK;MAC9CC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAEdJ,QAAQ,CAAC;QACPO,IAAI,EAAE,aAAa;QACnBR,OAAO,EAAEK,CAAC,CAACI;MACb,CAAC,CAAC;MAEFR,QAAQ,CAAC;QACPO,IAAI,EAAE,UAAU;QAChBE,IAAI,EAAEL,CAAC,CAACK;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,OAAO,EAACI,QAAQ,CAAC,CAAC;EAEvB,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACxBV,QAAQ,CAAC;MACPO,IAAI,EAAE,UAAU;MAChBE,IAAI,EAAER;IACR,CAAC,CAAC;IACF,IAAG,CAACA,KAAK,CAACU,SAAS,EAAC;MAClBX,QAAQ,CAAC;QACPO,IAAI,EAAE,aAAa;QACnBR,OAAO,EAAEE,KAAK,CAACU;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;;EAEF;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBACIpB,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI3B,KAAA,CAAAqB,aAAA;IAAKO,SAAS,EAAC,yBAAyB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxC3B,KAAA,CAAAqB,aAAA,CAAClB,aAAa;IACV0B,IAAI,EAAC,eAAe;IACpBtB,KAAK,EAAEA,KAAM;IACbuB,IAAI,EAAE,CAACxB,QAAQ,CAAE;IACjByB,MAAM,EAAE;MACJC,OAAO,EAAE,UAAU;MACnBC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE,SAAS;MACtBC,UAAU,EAAE,MAAM;MAClBC,gBAAgB,EAAE,MAAM;MACxBC,cAAc,EAAE,MAAM;MACtBC,UAAU,EAAC,GAAG;MACdC,iBAAiB,EAAE;IACrB,CAAE;IACJC,IAAI,EAAEjC,OAAQ;IACdkC,QAAQ,EAAGC,KAAK,IAAG;MACfjC,KAAK,GAACiC,KAAK;MACX,IAAIjC,KAAK,CAACU,SAAS,EAAC;QAClBD,YAAY,CAAC,CAAC;MAChB;IACJ,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACD,CACA,CACD,CAAC;AAEjB,CAAC"},"metadata":{},"sourceType":"module"}