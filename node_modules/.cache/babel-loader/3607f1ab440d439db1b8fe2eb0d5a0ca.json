{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/Body.js\";\nimport React from 'react';\nimport { PlayCircleFilled } from '@material-ui/icons';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDataLayerValue } from '../DataLayer';\nimport { Header } from './Header';\nimport { SongRow } from './SongRow';\nimport \"./styles/Body.css\";\nexport const Body = ({\n  spotify\n}) => {\n  const [{\n    discover_weekly\n  }, dispatch] = useDataLayerValue(); //console.log(discover_weekly)\n\n  const playPlaylist = () => {\n    dispatch({\n      type: \"SET_PLAYING\",\n      playing: true\n    });\n    dispatch({\n      type: \"SET_PLAY_URI\",\n      play_uri: \"spotify:playlist:37i9dQZEVXcIdICMRECAXa\"\n    });\n    spotify.getMyCurrentPlayingTrack().then(r => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    spotify: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.images[0].url,\n    alt: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body_infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"PLAYLIST\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Discover Weekly\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body_songs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body_icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PlayCircleFilled, {\n    className: \"body_shuffle\",\n    onClick: playPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.tracks.items.map(item => /*#__PURE__*/React.createElement(SongRow, {\n    key: item.track.name,\n    track: item.track,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 59\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/Body.js"],"names":["React","PlayCircleFilled","FavoriteBorderIcon","MoreHorizIcon","useDataLayerValue","Header","SongRow","Body","spotify","discover_weekly","dispatch","playPlaylist","type","playing","play_uri","getMyCurrentPlayingTrack","then","r","item","images","url","description","tracks","items","map","track","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { PlayCircleFilled } from '@material-ui/icons'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\"\nimport { useDataLayerValue } from '../DataLayer'\nimport { Header } from './Header'\nimport {SongRow } from './SongRow'\nimport \"./styles/Body.css\"\n\nexport const Body = ({spotify}) => {\n    const [{discover_weekly} , dispatch] = useDataLayerValue()\n    //console.log(discover_weekly)\n    const playPlaylist = () => {\n        dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          })\n          dispatch({\n            type: \"SET_PLAY_URI\",\n            play_uri: \"spotify:playlist:37i9dQZEVXcIdICMRECAXa\",\n          })\n          spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n              type: \"SET_ITEM\",\n              item: r.item,\n            })\n          })\n        }\n      \n    return (\n        <div className=\"body\">\n            <Header spotify/>\n            <div className=\"body_info\">\n                <img src={discover_weekly?.images[0].url} alt=\"banner\"></img>\n                <div className=\"body_infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover Weekly</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            \n            </div>\n            <div className=\"body_songs\">\n                <div className=\"body_icons\">\n                    <PlayCircleFilled \n                        className=\"body_shuffle\"\n                        onClick={playPlaylist}\n                    />\n\n                    <FavoriteBorderIcon fontSize=\"large\" />\n                    <MoreHorizIcon/>\n                </div>\n                {discover_weekly?.tracks.items.map(item=> <SongRow key={item.track.name}  track={item.track}/>)}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}