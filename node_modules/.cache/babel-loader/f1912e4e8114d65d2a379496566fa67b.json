{"ast":null,"code":"// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = window.location.origin + '/';\nconst clientId = \"b520e14a69d84d1692b7579b03d3d74d\";\nconst scopes = [\"streaming\", \"user-read-currently-playing\", \"user-read-recently-played\", \"user-read-playback-state\", \"user-read-email\", \"user-read-private\", \"user-top-read\", \"user-modify-playback-state\"];\nexport const getAccessToken = () => {\n  return window.location.hash.substring(1) //removing the # in the string\n  .split('&') //spliting the access token string from the other post varaibles\n  .reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n  /**\n   * reduce() method reduces the array to a single value.\n   * The reduce() method executes a provided function for each value of the array (from left-to-right).\n   * The return value of the function is stored in an accumulator (total/initial).\n   * initial is the initialValue, or the previously returned value of the function\n   * item is the value of the current element\n   * \n   * parts is spiliting the string into before = and after\n   * then initial is set to a single value i.e parts[1]\n   * then reduce() method returns a single value to the getAccessToken variable\n   * \n   * decodeURIComponent()???\n   * \n   */\n}; //https://developer.spotify.com/documentation/general/guides/authorization-guide/\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}\n&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\n&response_type=token&show_dialog=true`;","map":{"version":3,"sources":["/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/spotify.js"],"names":["authEndpoint","redirectUri","window","location","origin","clientId","scopes","getAccessToken","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","loginUrl","join"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,wCAArB;AAEP,MAAMC,WAAW,GAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,GAA5C;AAEA,MAAMC,QAAQ,GAAG,kCAAjB;AAEA,MAAMC,MAAM,GAAG,CACb,WADa,EAEb,6BAFa,EAGb,2BAHa,EAIb,0BAJa,EAKb,iBALa,EAMb,mBANa,EAOb,eAPa,EAQb,4BARa,CAAf;AAWA,OAAO,MAAMC,cAAc,GAAG,MAAK;AACjC,SAAOL,MAAM,CAACC,QAAP,CAAgBK,IAAhB,CACNC,SADM,CACI,CADJ,EACM;AADN,GAENC,KAFM,CAEA,GAFA,EAEI;AAFJ,GAGNC,MAHM,CAGC,CAACC,OAAD,EAASC,IAAT,KAAkB;AACxB,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACA,WAAOF,OAAP;AACD,GAPM,EAOL,EAPK,CAAP;AASA;;;;;;;;;;;;;;AAcD,CAxBM,C,CA2BP;;AACA,OAAO,MAAMI,QAAQ,GAAI,GAAEhB,YAAa,cAAaK,QAAS;gBAC9CJ,WAAY,UAASK,MAAM,CAACW,IAAP,CAAY,KAAZ,CAAmB;sCADjD","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\"\n\nconst redirectUri =window.location.origin + '/'\n\nconst clientId = \"b520e14a69d84d1692b7579b03d3d74d\"\n\nconst scopes = [\n  \"streaming\",\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n]\n\nexport const getAccessToken = () =>{\n  return window.location.hash\n  .substring(1)//removing the # in the string\n  .split('&')//spliting the access token string from the other post varaibles\n  .reduce((initial,item) => {\n    let parts = item.split('=')\n    initial[parts[0]] = decodeURIComponent(parts[1])\n    return initial\n  },{})\n  \n  /**\n   * reduce() method reduces the array to a single value.\n   * The reduce() method executes a provided function for each value of the array (from left-to-right).\n   * The return value of the function is stored in an accumulator (total/initial).\n   * initial is the initialValue, or the previously returned value of the function\n   * item is the value of the current element\n   * \n   * parts is spiliting the string into before = and after\n   * then initial is set to a single value i.e parts[1]\n   * then reduce() method returns a single value to the getAccessToken variable\n   * \n   * decodeURIComponent()???\n   * \n   */\n}\n\n\n//https://developer.spotify.com/documentation/general/guides/authorization-guide/\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}\n&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\n&response_type=token&show_dialog=true`"]},"metadata":{},"sourceType":"module"}