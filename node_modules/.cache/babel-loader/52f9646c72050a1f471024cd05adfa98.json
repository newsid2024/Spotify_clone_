{"ast":null,"code":"// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = window.location.origin + '/';\nconst clientId = \"bb7d1c9855804b6d9505e904c14a0fa6\";\nconst scopes = [\"streaming\", \"user-read-currently-playing\", \"user-read-recently-played\", \"user-read-playback-state\", \"user-read-email\", \"user-read-private\", \"user-top-read\", \"user-modify-playback-state\"];\nexport const getAccessToken = () => {\n  return window.location.hash.substring(1) //removing the # in the string\n  .split('&') //spliting the access token string from the other post varaibles\n  .reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n\n  /**\n   * reduce() method reduces the array to a single value.\n   * The reduce() method executes a provided function for each value of the array (from left-to-right).\n   * The return value of the function is stored in an accumulator (total/initial).\n   * initial is the initialValue, or the previously returned value of the function\n   * item is the value of the current element\n   * \n   * parts is spiliting the string into before = and after\n   * then initial is set to a single value i.e parts[1]\n   * then reduce() method returns a single value to the getAccessToken variable\n   * \n   * decodeURIComponent()???\n   * \n   */\n};\n\n//https://developer.spotify.com/documentation/general/guides/authorization-guide/\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}\n&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\n&response_type=token&show_dialog=true`;","map":{"version":3,"names":["authEndpoint","redirectUri","window","location","origin","clientId","scopes","getAccessToken","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","loginUrl","join"],"sources":["/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/spotify.js"],"sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\"\n\nconst redirectUri =window.location.origin + '/'\n\nconst clientId = \"bb7d1c9855804b6d9505e904c14a0fa6\"\n\nconst scopes = [\n  \"streaming\",\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n]\n\nexport const getAccessToken = () =>{\n  return window.location.hash\n  .substring(1)//removing the # in the string\n  .split('&')//spliting the access token string from the other post varaibles\n  .reduce((initial,item) => {\n    let parts = item.split('=')\n    initial[parts[0]] = decodeURIComponent(parts[1])\n    return initial\n  },{})\n  \n  /**\n   * reduce() method reduces the array to a single value.\n   * The reduce() method executes a provided function for each value of the array (from left-to-right).\n   * The return value of the function is stored in an accumulator (total/initial).\n   * initial is the initialValue, or the previously returned value of the function\n   * item is the value of the current element\n   * \n   * parts is spiliting the string into before = and after\n   * then initial is set to a single value i.e parts[1]\n   * then reduce() method returns a single value to the getAccessToken variable\n   * \n   * decodeURIComponent()???\n   * \n   */\n}\n\n\n//https://developer.spotify.com/documentation/general/guides/authorization-guide/\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}\n&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\n&response_type=token&show_dialog=true`"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,wCAAwC;AAEpE,MAAMC,WAAW,GAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,GAAG;AAE/C,MAAMC,QAAQ,GAAG,kCAAkC;AAEnD,MAAMC,MAAM,GAAG,CACb,WAAW,EACX,6BAA6B,EAC7B,2BAA2B,EAC3B,0BAA0B,EAC1B,iBAAiB,EACjB,mBAAmB,EACnB,eAAe,EACf,4BAA4B,CAC7B;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAK;EACjC,OAAOL,MAAM,CAACC,QAAQ,CAACK,IAAI,CAC1BC,SAAS,CAAC,CAAC,CAAC;EAAA,CACZC,KAAK,CAAC,GAAG,CAAC;EAAA,CACVC,MAAM,CAAC,CAACC,OAAO,EAACC,IAAI,KAAK;IACxB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,OAAOF,OAAO;EAChB,CAAC,EAAC,CAAC,CAAC,CAAC;;EAEL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAGD;AACA,OAAO,MAAMI,QAAQ,GAAI,GAAEhB,YAAa,cAAaK,QAAS;AAC9D,gBAAgBJ,WAAY,UAASK,MAAM,CAACW,IAAI,CAAC,KAAK,CAAE;AACxD,sCAAsC"},"metadata":{},"sourceType":"module"}