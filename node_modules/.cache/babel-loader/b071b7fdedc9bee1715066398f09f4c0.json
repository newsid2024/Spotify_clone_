{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport { getAccessToken } from './components/spotify';\nimport SpotifyWebApi from 'spotify-web-api-js'; //npm i spotify-web-api-js \n//https://github.com/JMPerez/spotify-web-api-js\n\nimport Player from './components/Player';\nimport { useDataLayerValue } from './DataLayer';\nconst spotifyOb = new SpotifyWebApi();\n\nfunction App() {\n  //deployed\n  //const [token , setToken] = useState(null)\n  const [{\n    token\n  }, dispatch] = useDataLayerValue(); //DataLayer.user is destructured in this\n  //state in {} will get everything\n\n  useEffect(() => {\n    const hash = getAccessToken();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      spotifyOb.setAccessToken(_token); //spotify object from spotify WebApi Wrapper which helps us communicate with Spotify app\n\n      spotifyOb.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotifyOb.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        });\n      });\n    }\n\n    spotifyOb.getMyTopArtists().then(response => dispatch({\n      type: \"SET_TOP_ARTISTS\",\n      top_artists: response\n    })); //enter your own discover weekly playlist id to get your songs\n\n    spotifyOb.getPlaylist(\"37i9dQZEVXcIdICMRECAXa\").then(response => {\n      dispatch({\n        type: 'SET_DISCOVER_WEEKLY',\n        discover_weekly: response\n      });\n    });\n  }, [token, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, token ? /*#__PURE__*/React.createElement(Player, {\n    spotify: spotifyOb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 51\n    }\n  }));\n}\n\nexport default App; //useEffect Hook \n\n/**\n * It runs a piece of code based on a given condition\n * It runs a function given inside it\n * //we give [] to specify it to run it only once\n * //if we put a variable inside [name,age] the useEffect will run whenever the name var changes.\n */\n//Problem: Prop Drilling\n//Solution:Context API","map":{"version":3,"sources":["/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/App.js"],"names":["React","useEffect","Login","getAccessToken","SpotifyWebApi","Player","useDataLayerValue","spotifyOb","App","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlists","getMyTopArtists","response","top_artists","getPlaylist","discover_weekly"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,iBAAR,QAAgC,aAAhC;AAGA,MAAMC,SAAS,GAAG,IAAIH,aAAJ,EAAlB;;AAEA,SAASI,GAAT,GAAe;AACb;AACE;AACA,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAASC,QAAT,IAAqBJ,iBAAiB,EAA5C,CAHW,CAIH;AACA;;AACRL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGR,cAAc,EAA3B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAqB,EAArB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAW;AAETJ,MAAAA,QAAQ,CACN;AACEM,QAAAA,IAAI,EAAE,WADR;AAEEP,QAAAA,KAAK,EAAEK;AAFT,OADM,CAAR;AAMAP,MAAAA,SAAS,CAACU,cAAV,CAAyBH,MAAzB,EARS,CAQwB;;AAEjCP,MAAAA,SAAS,CAACW,KAAV,GAAkBC,IAAlB,CAAuBC,IAAI,IAAI;AAC7BV,QAAAA,QAAQ,CACN;AACEM,UAAAA,IAAI,EAAE,UADR;AAEEI,UAAAA,IAAI,EAACA;AAFP,SADM,CAAR;AAMD,OAPD;AAQAb,MAAAA,SAAS,CAACc,gBAAV,GAA6BF,IAA7B,CAAmCG,SAAD,IAAe;AAC/CZ,QAAAA,QAAQ,CACN;AACEM,UAAAA,IAAI,EAAE,eADR;AAEEM,UAAAA,SAAS,EAACA;AAFZ,SADM,CAAR;AAMD,OAPD;AAQD;;AACDf,IAAAA,SAAS,CAACgB,eAAV,GAA4BJ,IAA5B,CAAkCK,QAAD,IAC/Bd,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,iBADC;AAEPS,MAAAA,WAAW,EAAED;AAFN,KAAD,CADV,EAhCc,CAuCd;;AACAjB,IAAAA,SAAS,CAACmB,WAAV,CAAsB,wBAAtB,EAAgDP,IAAhD,CAAsDK,QAAD,IAAY;AAC/Dd,MAAAA,QAAQ,CACN;AACEM,QAAAA,IAAI,EAAE,qBADR;AAEEW,QAAAA,eAAe,EAACH;AAFlB,OADM,CAAR;AAMD,KAPD;AASD,GAjDQ,EAiDP,CAACf,KAAD,EAAOC,QAAP,CAjDO,CAAT;AAkDF,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,KAAK,gBAAI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,gBAAqC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9C,CAFF;AAOD;;AAED,eAAeC,GAAf,C,CAGA;;AACA;;;;;;AAOC;AACA","sourcesContent":["import React,{ useEffect } from 'react'\nimport './App.css'\nimport Login from './components/Login'\nimport { getAccessToken } from './components/spotify'\nimport SpotifyWebApi from 'spotify-web-api-js'\n//npm i spotify-web-api-js \n//https://github.com/JMPerez/spotify-web-api-js\nimport Player from './components/Player'\nimport {useDataLayerValue} from './DataLayer'\n\n\nconst spotifyOb = new SpotifyWebApi()\n\nfunction App() {\n  //deployed\n    //const [token , setToken] = useState(null)\n    const [{token},dispatch] = useDataLayerValue()\n            //DataLayer.user is destructured in this\n            //state in {} will get everything\n    useEffect(() => {\n      const hash = getAccessToken();\n      window.location.hash=\"\"\n      const _token = hash.access_token\n\n      if (_token){\n\n        dispatch(\n          {\n            type: 'SET_TOKEN',\n            token: _token,\n          }\n        )\n        spotifyOb.setAccessToken(_token) //spotify object from spotify WebApi Wrapper which helps us communicate with Spotify app\n\n        spotifyOb.getMe().then(user => {\n          dispatch(\n            {\n              type: 'SET_USER',\n              user:user,\n            }\n          )\n        })\n        spotifyOb.getUserPlaylists().then((playlists) => {\n          dispatch(\n            {\n              type: 'SET_PLAYLISTS',\n              playlists:playlists,\n            }\n          )\n        })\n      }\n      spotifyOb.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      //enter your own discover weekly playlist id to get your songs\n      spotifyOb.getPlaylist(\"37i9dQZEVXcIdICMRECAXa\").then((response)=>{\n        dispatch(\n          {\n            type: 'SET_DISCOVER_WEEKLY',\n            discover_weekly:response,\n          }\n        )\n      })\n      \n    },[token,dispatch])\n  return (\n      \n    <div className=\"App\">\n      { token ?  <Player spotify={spotifyOb}/> :  <Login/>}\n    </div>\n  )\n\n}\n\nexport default App;\n\n\n//useEffect Hook \n/**\n * It runs a piece of code based on a given condition\n * It runs a function given inside it\n * //we give [] to specify it to run it only once\n * //if we put a variable inside [name,age] the useEffect will run whenever the name var changes.\n */\n\n //Problem: Prop Drilling\n //Solution:Context API"]},"metadata":{},"sourceType":"module"}