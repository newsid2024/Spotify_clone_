{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/SongRow.js\";\nimport React from 'react';\nimport { useDataLayerValue } from '../DataLayer';\nimport \"./styles/SongRow.css\";\nexport const SongRow = ({\n  track\n}) => {\n  const [{\n    play_uri\n  }, dispatch] = useDataLayerValue();\n\n  function handleClick() {\n    dispatch({\n      type: 'SET_PLAY_URI',\n      play_uri: track.uri\n    });\n    dispatch({\n      type: \"SET_PLAYING\",\n      playing: true\n    });\n    if (play_uri) console.log(\"üëç\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song_row\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"song_rowAlbum\",\n    src: track.album.images[0].url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song_rowInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, track.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, track.artists.map(artist => artist.name).join(\", \"), \" -\", \" \", track.album.name)));\n};","map":{"version":3,"sources":["/Users/siddharthkeshar/Desktop/Projects for CV/spotify-clone-master/src/components/SongRow.js"],"names":["React","useDataLayerValue","SongRow","track","play_uri","dispatch","handleClick","type","uri","playing","console","log","album","images","url","name","artists","map","artist","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,sBAAP;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChC,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAYC,QAAZ,IAAwBJ,iBAAiB,EAA/C;;AAEA,WAASK,WAAT,GAAsB;AAEnBD,IAAAA,QAAQ,CACH;AACIE,MAAAA,IAAI,EAAC,cADT;AAEIH,MAAAA,QAAQ,EAACD,KAAK,CAACK;AAFnB,KADG,CAAR;AAMCH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAE,aADD;AAELE,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKA,QAAIL,QAAJ,EACAM,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEL,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEH,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,GAA1D;AAA+D,IAAA,GAAG,EAAC,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACY,IAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,KAAK,CAACa,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAYA,MAAM,CAACH,IAArC,EAA4CI,IAA5C,CAAiD,IAAjD,CAAJ,QAA8D,GAA9D,EACKhB,KAAK,CAACS,KAAN,CAAYG,IADjB,CAFJ,CAFJ,CAFJ;AAYH,CAhCM","sourcesContent":["import React from 'react'\nimport { useDataLayerValue } from '../DataLayer'\nimport \"./styles/SongRow.css\"\n\nexport const SongRow = ({track}) => {\n    const [{play_uri},dispatch] = useDataLayerValue()\n   \n    function handleClick(){\n    \n       dispatch(\n            {\n                type:'SET_PLAY_URI',\n                play_uri:track.uri,\n            }\n        )\n        dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          })\n          \n        if (play_uri )\n        console.log(\"üëç\")\n    }\n    \n    return(\n        \n        <div className=\"song_row\" onClick={handleClick} >\n            <img className=\"song_rowAlbum\" src={track.album.images[0].url} alt=\"\"></img>\n            <div className=\"song_rowInfo\">\n                <h1>{track.name}</h1>\n                <p>{track.artists.map((artist) => artist.name ).join(\", \")} -{\" \"}\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}